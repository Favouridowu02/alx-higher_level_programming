The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

Importing the function from the module:
	>>> add_integer = __import__("0-add_integer").add_integer

Checking for the function docstring:
	>>> len(add_integer.__doc__) > 1
	True

Checking for module docstring:
	>>> mod = __import__("0-add_integer").__doc__
	>>> len(mod) > 1
	True

Checking for addition:
	>>> add_integer(5, 10)
	15

checking negative addition:
	>>> add_integer(5, -10)
	-5
	>>> add_integer(-10, 5)
	-5
	>>> add_integer(-10, -5)
	-15

checking one arg:
	>>> add_integer(1)
	99

Checking no arg:
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'

Checking more than 2 args:
	>>> add_integer(1, 2, 3)
	Traceback (most recent call last):
	...
	TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Checking for float with int
	>>> add_integer(9.07, 88.79)
	97
	>>> add_integer(9.08, 10)
	19
	>>> add_integer(90, 1.32)
	91

Checking for passed String:
	>>> add_integer("man")
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Checking for Float Overflow:
	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer
